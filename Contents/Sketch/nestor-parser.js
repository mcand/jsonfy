// nestor-parser.js
// This file contains the class responsible for generating a JSON with all information
// needed to create an HTML and a CSS for anything designed in Sketch
@import 'utils.js'

function NestorParser(sketchFile){
  NestorParser = function(sketchJson){
    this.sketchJSON = sketchJson
  }

  NestorParser.prototype.generateNestorJson = function(){
    // mount initial json
    this.nestorJson = {"root": {}}

    // here we start to structure the json generated by NestorParser
    var symbolLayer = getSymbolLayers()

    // for each symbol layer we generate a new JSON
    symbolLayers.forEach(function(obj){
      // we have to look for elements in MSSymbolMaster
      var msSymbolMaster = obj["layers"]
      // each element in MSSymbolMaster can be a tag
      // we have to navigate to each node and subnode until the end
      msSymbolMaster.forEach(function(msSymboMasterChild){
        if(msSymboMasterChild.hasOwnProperty("layers"){
          var hasLayer = msSymboMasterChild;

            
        })

      });

    });
  }

  // example of static method assinature (not actually being used)
  NestorParser.staticMethod = function(){
    log("This is a static method.")
  }

  NestorParser.prototype.getSketchJson = function(){
    log(this.sketchJSON)
  }

  var numberOfLayerGroupsInObject = function(obj){

  }

  /* utilitary methods */
  var getSymbolLayers = function(){
    return this.sketchJson["pages"][1]["layers"]
  }

  // to check if the parser should look deeper
  var objectHasMoreLayers = function(obj){
    return !(obj["layers"] === undefined)
  }

  return new NestorParser(sketchFile)
}
